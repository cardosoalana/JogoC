#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <unistd.h>

#define NUM_JOGADORES 5

typedef struct {
    char *nome;
    char *funcao;
    int vivo;
} Jogador;

void clear_screen() {
    #ifdef _WIN32
        system("cls");
    #else
        system("clear");
    #endif
}

void imprimirCabecalho() {
    printf("\n\t_________________________________________");
    printf("\n\t                                        ");
    printf("\n\t            JOGO DO LOBO                ");
    printf("\n\t                                        ");
    printf("\n\t_________________________________________");
    printf("\n\t                                        ");
}

void imprimirIntroducao();
void imprimirTutorial();
void sairJogo();
void menu();
void distribuirFuncoes(Jogador jogadores[]);
void mostrarFuncao(Jogador jogador);
void mostrarEstadoJogadores(Jogador jogadores[]);
int assassinar(Jogador jogadores[]);
void acaoMedico(Jogador jogadores[], int ataque_lobo, int* cura);
void acaoBruxa(Jogador jogadores[], int ataque_lobo, int* cura, int* mata);
void aplicarAcoes(Jogador jogadores[], int ataque_lobo, int cura_medico, int acao_bruxa_cura, int acao_bruxa_mata);
void iniciarJogo();
int votarLobo(Jogador jogadores[]);
int verificarFimDoJogo(Jogador jogadores[]);

void imprimirIntroducao() {
    clear_screen();
    
    imprimirCabecalho();
    printf("\n\t    Bem-vindos ao Jogo do Lobo!         ");
    printf("\n\t                                        ");
    printf("\n\t    Em uma pequena aldeia, os           ");
    printf("\n\t    habitantes vivem em paz,            ");
    printf("\n\t    exceto por uma terrivel ameaca:     ");
    printf("\n\t    um lobo se esconde entre eles.      ");
    printf("\n\t                                        ");
    printf("\n\t    A cada noite, o lobo escolhe        ");
    printf("\n\t    uma vitima para devorar,            ");
    printf("\n\t    enquanto a aldeia tenta             ");
    printf("\n\t    descobrir sua identidade.           ");
    printf("\n\t                                        ");
    printf("\n\t    Alem do lobo, ha outros             ");
    printf("\n\t    personagens com habilidades         ");
    printf("\n\t    especiais:                          ");
    printf("\n\t    - O Medico pode salvar vidas.       ");
    printf("\n\t    - A Bruxa pode curar ou matar.      ");
    printf("\n\t    - Os Aldeoes devem sobreviver.      ");
    printf("\n\t                                        ");
    printf("\n\t    Trabalhem juntos para revelar       ");
    printf("\n\t    quem eh o lobo antes que seja       ");
    printf("\n\t    tarde demais!                       ");
    printf("\n\t                                        ");
    printf("\n\t_________________________________________");
    printf("\n\tPressione Enter para continuar...");
    getchar();
    clear_screen();
}

void imprimir_tutorial() {
    clear_screen();
    
    imprimirCabecalho();
    
    printf("\n\t    Bem-vindos ao Jogo do Lobo!         ");
    printf("\n\t                                        ");
    printf("\n\t    O Jogo do Lobo eh um jogo de        ");
    printf("\n\t    estrategia e deducao onde os        ");
    printf("\n\t    jogadores assumem papeis de         ");
    printf("\n\t    habitantes de uma pequena aldeia.   ");
    printf("\n\t                                        ");
    printf("\n\t    O objetivo principal do jogo eh     ");
    printf("\n\t    identificar e eliminar o lobo       ");
    printf("\n\t    que esta entre os habitantes,       ");
    printf("\n\t    enquanto o lobo tenta devorar       ");
    printf("\n\t    os aldeoes sem ser descoberto.      ");
    printf("\n\t                                        ");
    printf("\n\t    A cada rodada, os jogadores         ");
    printf("\n\t    desempenham diferentes papeis,      ");
    printf("\n\t    como Lobo, Medico, Bruxa e          ");
    printf("\n\t    Aldeoes normais, cada um com        ");
    printf("\n\t    habilidades especiais.              ");
    printf("\n\t                                        ");
    printf("\n\t    - O Lobo escolhe uma vitima         ");
    printf("\n\t      para devorar a cada noite.        ");
    printf("\n\t    - O Medico pode salvar a vida       ");
    printf("\n\t      de um jogador.                    ");
    printf("\n\t    - A Bruxa pode curar ou matar       ");
    printf("\n\t      um jogador, mas com limitacoes.   ");
    printf("\n\t    - Os Aldeoes devem trabalhar        ");
    printf("\n\t      juntos para identificar o lobo    ");
    printf("\n\t      antes que seja tarde demais.      ");
    printf("\n\t                                        ");
    printf("\n\t    Durante o dia, os jogadores se      ");
    printf("\n\t    reunem para discutir e votar em     ");
    printf("\n\t    quem eles acham que e o lobo.       ");
    printf("\n\t    A noite, as acoes dos diferentes    ");
    printf("\n\t    papeis sao executadas, seguidas     ");
    printf("\n\t    pela revelacao das vitimas.         ");
    printf("\n\t                                        ");
    printf("\n\t    O jogo continua ate que o lobo      ");
    printf("\n\t    seja eliminado ou ate que os        ");
    printf("\n\t    aldeoes sejam todos devorados.      ");
    printf("\n\t                                        ");
    printf("\n\t    Trabalhem juntos e usem a logica    ");
    printf("\n\t    para determinar a verdade e vencer  ");
    printf("\n\t    o Jogo do Lobo!                     ");
    printf("\n\t                                        ");
    printf("\n\t_________________________________________");

    printf("\n\tPressione Enter para continuar...");
    getchar();
    clear_screen();
}

void sairJogo() {
    printf("Saindo do jogo...\n");
    exit(0);
}

void menu() {
    char opt;
    clear_screen();

    do {
        clear_screen();
        imprimirCabecalho();
        printf("\n\t    [1] - INICIAR JOGO                  ");
        printf("\n\t    [2] - TUTORIAL                      ");
        printf("\n\t    [3] - SAIR                          ");
        printf("\n\t_________________________________________");
        printf("\n\tDigite o numero de uma das opcoes: ");
        scanf(" %c", &opt); 
        while (getchar() != '\n');
        if (opt == '1') {
            imprimirIntroducao();
            iniciarJogo();
        } else if (opt == '2') {
            imprimir_tutorial();
        } else if (opt == '3') {
            sairJogo();
        } else {
            printf("Opcao invalida! Tente novamente.\n");
            sleep(1);
        }
    } while (opt != '3');
}

void distribuir_funcoes(Jogador jogadores[]) {
    char *funcoes[NUM_JOGADORES] = {"Lobo", "Medico", "Aldeao", "Aldeao", "Bruxa"};
    int indices[NUM_JOGADORES] = {0, 1, 2, 3, 4};
    int i, j, temp;    
    srand(time(NULL));

    for (i = NUM_JOGADORES - 1; i > 0; i--) {
        j = rand() % (i + 1);
        temp = indices[i];
        indices[i] = indices[j];
        indices[j] = temp;
    }

    for (i = 0; i < NUM_JOGADORES; i++) {
        jogadores[i].funcao = funcoes[indices[i]];
        jogadores[i].vivo = 1; 
    }
}

void mostrarFuncao(Jogador jogador) {
    clear_screen();
    
    printf("\n\t_________________________________________");
    printf("\n\n\t        HORA DE DESCOBRIR SUA          ");
    printf("\n\t         FUNCAO NA ALDEIA!             ");
    printf("\n\t_________________________________________");
    printf("\n\n\t         %s eh %s.            ", jogador.nome, jogador.funcao);
    printf("\n\n\t_________________________________________");
    printf("\n\tAperte Enter para continuar...");
    getchar(); 
    clear_screen();
}

void mostrarEstadoJogadores(Jogador jogadores[]) {
    int i;
    printf("\n\t_________________________________________");
    printf("\n\t     Estado atual dos jogadores        ");
    for (i = 0; i < NUM_JOGADORES; i++) {
        printf("\n\t%s - %s", jogadores[i].nome, jogadores[i].vivo ? "Vivo" : "Morto");
    }
    printf("\n\t_________________________________________");
    printf("\n\tAperte Enter para continuar...\n");
    getchar();
}

int assassinar(Jogador jogadores[]) {
    clear_screen();
    int alvo;
    do {
        printf("\n\t_________________________________________");
        printf("\n\t                                       ");
        printf("\n\t            ACAO DO LOBO               ");
        printf("\n\t                                       ");
        printf("\n\t_________________________________________");
        printf("\n\t                                       ");
        printf("\n\t   Lobo, em quem vocÃª quer assassinar? ");
        printf("\n\t   (Escolha de 0 a %d)                 ", NUM_JOGADORES - 1);
        printf("\n\t                                       ");
        printf("\n\t_________________________________________");
        printf("\n\tDigite a sua escolha: ");
        scanf("%d", &alvo);
    } while (alvo < 0 || alvo >= NUM_JOGADORES || !jogadores[alvo].vivo);
    
    return alvo;
}

void acaoMedico(Jogador jogadores[], int ataque_lobo, int* cura) {
    clear_screen();
    int alvo;
    printf("\n\t_________________________________________");
    printf("\n\t                                       ");
    printf("\n\t            ACAO DO MEDICO             ");
    printf("\n\t                                       ");
    printf("\n\t_________________________________________");
    printf("\n\t                                        ");
    printf("\n\t   Medico, em quem voce quer curar?     ");
    printf("\n\t   (Escolha de 1 a %d ou -1 para)       ", NUM_JOGADORES - 1);
    printf("\n\t    nao curar                            "); 
    printf("\n\t_________________________________________");
    printf("\n\tDigite a sua escolha: ");
    scanf("%d", &alvo);
    if (alvo >= 0 && alvo < NUM_JOGADORES && jogadores[alvo].vivo && alvo == ataque_lobo) {
        *cura = 1; 
    } else {
        *cura = 0;
    }
}

void acaoBruxa(Jogador jogadores[], int ataque_lobo, int* cura, int* mata) {
    clear_screen();
    char acao;
    printf("\n\t_________________________________________");
    printf("\n\t                                       ");
    printf("\n\t            ACAO DA BRUXA              ");
    printf("\n\t                                       ");
    printf("\n\t_________________________________________");
    printf("\n\t                                       ");
    printf("\n\t   Bruxa, vocÃª tem as seguintes        ");
    printf("\n\t   opÃ§Ãµes:                             ");
    printf("\n\t   c - Curar um jogador                ");
    printf("\n\t   m - Matar um jogador                ");
    printf("\n\t   n - Nenhuma acao.                   ");
    printf("\n\t                                       ");
    printf("\n\t_________________________________________");
    printf("\n\tDigite a sua escolha: ");
    scanf("%s", &acao);

    if (acao == 'c') {
        *cura = 1; 
    } else if (acao == 'm') {
        int alvo;
        
        printf("\n\t                                       ");
        printf("\n\tEscolha quem voce deseja matar         ");
        printf("\n\t(0 a %d):                              ", NUM_JOGADORES - 1);
        printf("\n\t_________________________________________");
        scanf("\n%d", &alvo);
        
        if (alvo >= 0 && alvo < NUM_JOGADORES && jogadores[alvo].vivo) {
            *mata = alvo;
        } else {
            *mata = -1;
        }
        
    } else {
        *cura = 0;
        *mata = -1;
    }
}

void acaoAldeao() {
    clear_screen();
    printf("\n\t_________________________________________");
    printf("\n\t\n");
    printf("\n\t            ACAO DO ALDEAO             ");
    printf("\n\t\n");
    printf("\n\t_________________________________________");
    printf("\n\t\n");
    printf("\n\t      Aldeao, aperte qualquer          ");
    printf("\n\t      tecla para continuar...          ");
    printf("\n\t\n ");
    printf("\n\t_________________________________________\n");
    getchar();
    sleep(2);
}

void aplicarAcoes(Jogador jogadores[], int ataque_lobo, int cura_medico, int acao_bruxa_cura, int acao_bruxa_mata) {
    if (cura_medico || acao_bruxa_cura) {
        jogadores[ataque_lobo].vivo = 1;
    } else {
        jogadores[ataque_lobo].vivo = 0; 
    }

    if (acao_bruxa_mata >= 0) {
        jogadores[acao_bruxa_mata].vivo = 0;
    }
}

int votarLobo(Jogador jogadores[]) {
    int votos[NUM_JOGADORES] = {0};
    int voto, i, max_votos = 0, suspeito = -1;

    printf("\n\t_________________________________________");
    printf("\n\t");
    printf("\n\t            VOTACAO                         ");
    printf("\n\t");
    printf("\n\t_________________________________________\n");
    printf("\n\n        Hora da votacao! Cada jogador      ");
    printf("\n\t        deve votar.                    \n\n");

    for (i = 0; i < NUM_JOGADORES; i++) {
        if (jogadores[i].vivo) {
            printf("            %s, escolha quem voce acha que e o lobo", jogadores[i].nome);
            printf("          (0 a %d): ", NUM_JOGADORES - 1);
            scanf("%d", &voto);
            while (voto < 0 || voto >= NUM_JOGADORES || !jogadores[voto].vivo) {
                printf("            Voto invalido!");
                printf("            Escolha um jogador vivo (0 a %d): ", NUM_JOGADORES - 1);
                scanf("%d", &voto);
            }
            votos[voto]++;
        }
    }

    for (i = 0; i < NUM_JOGADORES; i++) {
        if (votos[i] > max_votos) {
            max_votos = votos[i];
            suspeito = i;
        }
    }

    return suspeito;
}

int verificarFimDoJogo(Jogador jogadores[]) {
    int i, num_vivos = 0, num_lobos = 0;
    for (i = 0; i < NUM_JOGADORES; i++) {
        if (jogadores[i].vivo) {
            num_vivos++;
            if (strcmp(jogadores[i].funcao, "Lobo") == 0) {
                num_lobos++;
            }
        }
    }
    if (num_vivos == num_lobos) {
        printf("\n\t_________________________________________");
        printf("\n\t\n");
        printf("\n\t             FIM DE JOGO               ");
        printf("\n\t\n");
        printf("\n\t   O lobo venceu! A aldeia foi devorada. ");
        printf("\n\t\n");
        printf("\n\t_________________________________________");
        sleep(10);
        
        clear_screen();
        return 1;
    } else if (num_lobos == 0) {
        clear_screen();
        printf("\n\t_________________________________________");
        printf("\n\t\n");
        printf("\n\t             FIM DE JOGO               ");
        printf("\n\t\n");
        printf("\n\t   A aldeia sobreviveu! ParabÃ©ns!     ");
        printf("\n\t\n");
        printf("\n\t_______________________________________");
        sleep(10);
        
        clear_screen();
        return 1;
    }
    return 0;
}

void iniciarJogo() {
    Jogador jogadores[NUM_JOGADORES] = {
        {"Jogador 1"},
        {"Jogador 2"},
        {"Jogador 3"},
        {"Jogador 4"},
        {"Jogador 5"}
    };

    distribuir_funcoes(jogadores);

    int i;
    for (i = 0; i < NUM_JOGADORES; i++) {
        mostrarFuncao(jogadores[i]);
    }

    while (1) {
        int ataque_lobo = -1, cura_medico = 0, acao_bruxa_cura = 0, acao_bruxa_mata = -1;

        for (i = 0; i < NUM_JOGADORES; i++) {
            if (!jogadores[i].vivo) continue;

            if (strcmp(jogadores[i].funcao, "Lobo") == 0) {
                ataque_lobo = assassinar(jogadores);
            } else if (strcmp(jogadores[i].funcao, "Medico") == 0) {
                acaoMedico(jogadores, ataque_lobo, &cura_medico);
            } else if (strcmp(jogadores[i].funcao, "Bruxa") == 0) {
                acaoBruxa(jogadores, ataque_lobo, &acao_bruxa_cura, &acao_bruxa_mata);
            } else if (strcmp(jogadores[i].funcao, "Aldeao") == 0) {
                acaoAldeao();
            }
        }

        aplicarAcoes(jogadores, ataque_lobo, cura_medico, acao_bruxa_cura, acao_bruxa_mata);

        clear_screen();
        mostrarEstadoJogadores(jogadores);

        if (verificarFimDoJogo(jogadores))
            break;

        // VotaÃ§Ã£o dos jogadores
        int suspeito = votarLobo(jogadores);
        if (suspeito >= 0 && strcmp(jogadores[suspeito].funcao, "Lobo") == 0) {
            printf("\n\t_________________________________________");
            printf("\n\t\n");
            printf("\n%s foi acusado de ser o lobo e foi eliminado!\n", jogadores[suspeito].nome);
            printf("\n\t\n");
            printf("\n\t_______________________________________");
            jogadores[suspeito].vivo = 0;
        } else if (suspeito >= 0) {
            printf("\n\t_________________________________________");
            printf("\n\t\n");
            printf("\n%s foi eliminado, mas nao era o lobo!\n", jogadores[suspeito].nome);
            printf("\n\t\n");
            printf("\n\t_______________________________________");
            jogadores[suspeito].vivo = 0;
        }

        if (verificarFimDoJogo(jogadores))
            break;
    }
}

int main() {
    menu();
    return 0;
}
